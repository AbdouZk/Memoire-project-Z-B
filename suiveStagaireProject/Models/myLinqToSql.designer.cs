#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace suiveStagaireProject.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SuiveStagiaire")]
	public partial class myLinqToSqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEnseiginant(Enseiginant instance);
    partial void UpdateEnseiginant(Enseiginant instance);
    partial void DeleteEnseiginant(Enseiginant instance);
    partial void InsertAdministrateur(Administrateur instance);
    partial void UpdateAdministrateur(Administrateur instance);
    partial void DeleteAdministrateur(Administrateur instance);
    partial void InsertAgentService(AgentService instance);
    partial void UpdateAgentService(AgentService instance);
    partial void DeleteAgentService(AgentService instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertSection(Section instance);
    partial void UpdateSection(Section instance);
    partial void DeleteSection(Section instance);
    partial void InsertCatalogeSection(CatalogeSection instance);
    partial void UpdateCatalogeSection(CatalogeSection instance);
    partial void DeleteCatalogeSection(CatalogeSection instance);
    partial void InsertBranchee(Branchee instance);
    partial void UpdateBranchee(Branchee instance);
    partial void DeleteBranchee(Branchee instance);
    #endregion
		
		public myLinqToSqlDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SuiveStagiaireConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public myLinqToSqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public myLinqToSqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public myLinqToSqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public myLinqToSqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Enseiginant> Enseiginants
		{
			get
			{
				return this.GetTable<Enseiginant>();
			}
		}
		
		public System.Data.Linq.Table<Administrateur> Administrateurs
		{
			get
			{
				return this.GetTable<Administrateur>();
			}
		}
		
		public System.Data.Linq.Table<AgentService> AgentServices
		{
			get
			{
				return this.GetTable<AgentService>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Section> Sections
		{
			get
			{
				return this.GetTable<Section>();
			}
		}
		
		public System.Data.Linq.Table<CatalogeSection> CatalogeSections
		{
			get
			{
				return this.GetTable<CatalogeSection>();
			}
		}
		
		public System.Data.Linq.Table<Branchee> Branchees
		{
			get
			{
				return this.GetTable<Branchee>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Enseiginant")]
	public partial class Enseiginant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEnseiginant;
		
		private string _nom;
		
		private string _prenom;
		
		private System.DateTime _dateNais;
		
		private System.Nullable<int> _sexe;
		
		private string _adresse;
		
		private string _tel;
		
		private System.Nullable<System.DateTime> _dateDebut;
		
		private string _specialite;
		
		private System.Nullable<int> _userId;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEnseiginantChanging(int value);
    partial void OnidEnseiginantChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OndateNaisChanging(System.DateTime value);
    partial void OndateNaisChanged();
    partial void OnsexeChanging(System.Nullable<int> value);
    partial void OnsexeChanged();
    partial void OnadresseChanging(string value);
    partial void OnadresseChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    partial void OndateDebutChanging(System.Nullable<System.DateTime> value);
    partial void OndateDebutChanged();
    partial void OnspecialiteChanging(string value);
    partial void OnspecialiteChanged();
    partial void OnuserIdChanging(System.Nullable<int> value);
    partial void OnuserIdChanged();
    #endregion
		
		public Enseiginant()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEnseiginant", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idEnseiginant
		{
			get
			{
				return this._idEnseiginant;
			}
			set
			{
				if ((this._idEnseiginant != value))
				{
					this.OnidEnseiginantChanging(value);
					this.SendPropertyChanging();
					this._idEnseiginant = value;
					this.SendPropertyChanged("idEnseiginant");
					this.OnidEnseiginantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateNais", DbType="Date NOT NULL")]
		public System.DateTime dateNais
		{
			get
			{
				return this._dateNais;
			}
			set
			{
				if ((this._dateNais != value))
				{
					this.OndateNaisChanging(value);
					this.SendPropertyChanging();
					this._dateNais = value;
					this.SendPropertyChanged("dateNais");
					this.OndateNaisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sexe", DbType="Int")]
		public System.Nullable<int> sexe
		{
			get
			{
				return this._sexe;
			}
			set
			{
				if ((this._sexe != value))
				{
					this.OnsexeChanging(value);
					this.SendPropertyChanging();
					this._sexe = value;
					this.SendPropertyChanged("sexe");
					this.OnsexeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adresse", DbType="VarChar(200)")]
		public string adresse
		{
			get
			{
				return this._adresse;
			}
			set
			{
				if ((this._adresse != value))
				{
					this.OnadresseChanging(value);
					this.SendPropertyChanging();
					this._adresse = value;
					this.SendPropertyChanged("adresse");
					this.OnadresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="NChar(15)")]
		public string tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateDebut", DbType="Date")]
		public System.Nullable<System.DateTime> dateDebut
		{
			get
			{
				return this._dateDebut;
			}
			set
			{
				if ((this._dateDebut != value))
				{
					this.OndateDebutChanging(value);
					this.SendPropertyChanging();
					this._dateDebut = value;
					this.SendPropertyChanged("dateDebut");
					this.OndateDebutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialite", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string specialite
		{
			get
			{
				return this._specialite;
			}
			set
			{
				if ((this._specialite != value))
				{
					this.OnspecialiteChanging(value);
					this.SendPropertyChanging();
					this._specialite = value;
					this.SendPropertyChanged("specialite");
					this.OnspecialiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int")]
		public System.Nullable<int> userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Enseiginant", Storage="_User", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Enseiginants.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Enseiginants.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Administrateur")]
	public partial class Administrateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAdmin;
		
		private string _nom;
		
		private string _prenom;
		
		private System.Nullable<int> _userId;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAdminChanging(int value);
    partial void OnidAdminChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OnuserIdChanging(System.Nullable<int> value);
    partial void OnuserIdChanged();
    #endregion
		
		public Administrateur()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAdmin", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idAdmin
		{
			get
			{
				return this._idAdmin;
			}
			set
			{
				if ((this._idAdmin != value))
				{
					this.OnidAdminChanging(value);
					this.SendPropertyChanging();
					this._idAdmin = value;
					this.SendPropertyChanged("idAdmin");
					this.OnidAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int")]
		public System.Nullable<int> userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Administrateur", Storage="_User", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Administrateurs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Administrateurs.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AgentService")]
	public partial class AgentService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAgent;
		
		private string _nom;
		
		private string _prenom;
		
		private System.Nullable<int> _userId;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAgentChanging(int value);
    partial void OnidAgentChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OnuserIdChanging(System.Nullable<int> value);
    partial void OnuserIdChanged();
    #endregion
		
		public AgentService()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAgent", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idAgent
		{
			get
			{
				return this._idAgent;
			}
			set
			{
				if ((this._idAgent != value))
				{
					this.OnidAgentChanging(value);
					this.SendPropertyChanging();
					this._idAgent = value;
					this.SendPropertyChanged("idAgent");
					this.OnidAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int")]
		public System.Nullable<int> userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AgentService", Storage="_User", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.AgentServices.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.AgentServices.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _password;
		
		private System.Nullable<int> _groupID;
		
		private System.Nullable<int> _trustID;
		
		private System.Nullable<System.DateTime> _date;
		
		private EntitySet<Enseiginant> _Enseiginants;
		
		private EntitySet<Administrateur> _Administrateurs;
		
		private EntitySet<AgentService> _AgentServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OngroupIDChanging(System.Nullable<int> value);
    partial void OngroupIDChanged();
    partial void OntrustIDChanging(System.Nullable<int> value);
    partial void OntrustIDChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public User()
		{
			this._Enseiginants = new EntitySet<Enseiginant>(new Action<Enseiginant>(this.attach_Enseiginants), new Action<Enseiginant>(this.detach_Enseiginants));
			this._Administrateurs = new EntitySet<Administrateur>(new Action<Administrateur>(this.attach_Administrateurs), new Action<Administrateur>(this.detach_Administrateurs));
			this._AgentServices = new EntitySet<AgentService>(new Action<AgentService>(this.attach_AgentServices), new Action<AgentService>(this.detach_AgentServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(256)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupID", DbType="Int")]
		public System.Nullable<int> groupID
		{
			get
			{
				return this._groupID;
			}
			set
			{
				if ((this._groupID != value))
				{
					this.OngroupIDChanging(value);
					this.SendPropertyChanging();
					this._groupID = value;
					this.SendPropertyChanged("groupID");
					this.OngroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trustID", DbType="Int")]
		public System.Nullable<int> trustID
		{
			get
			{
				return this._trustID;
			}
			set
			{
				if ((this._trustID != value))
				{
					this.OntrustIDChanging(value);
					this.SendPropertyChanging();
					this._trustID = value;
					this.SendPropertyChanged("trustID");
					this.OntrustIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Enseiginant", Storage="_Enseiginants", ThisKey="id", OtherKey="userId")]
		public EntitySet<Enseiginant> Enseiginants
		{
			get
			{
				return this._Enseiginants;
			}
			set
			{
				this._Enseiginants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Administrateur", Storage="_Administrateurs", ThisKey="id", OtherKey="userId")]
		public EntitySet<Administrateur> Administrateurs
		{
			get
			{
				return this._Administrateurs;
			}
			set
			{
				this._Administrateurs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AgentService", Storage="_AgentServices", ThisKey="id", OtherKey="userId")]
		public EntitySet<AgentService> AgentServices
		{
			get
			{
				return this._AgentServices;
			}
			set
			{
				this._AgentServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Enseiginants(Enseiginant entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Enseiginants(Enseiginant entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Administrateurs(Administrateur entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Administrateurs(Administrateur entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_AgentServices(AgentService entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_AgentServices(AgentService entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Section")]
	public partial class Section : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idSec;
		
		private string _libeleSec;
		
		private string _libeleSecAr;
		
		private System.Nullable<System.DateTime> _dateOuv;
		
		private System.Nullable<int> _numSection;
		
		private string _modeGestionForm;
		
		private string _nivQualification;
		
		private System.Nullable<System.DateTime> _debutFor;
		
		private string _modeOrgaForm;
		
		private System.Nullable<System.DateTime> _finFor;
		
		private string _tuteurSection;
		
		private System.Nullable<int> _idCat;
		
		private EntityRef<CatalogeSection> _CatalogeSection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidSecChanging(int value);
    partial void OnidSecChanged();
    partial void OnlibeleSecChanging(string value);
    partial void OnlibeleSecChanged();
    partial void OnlibeleSecArChanging(string value);
    partial void OnlibeleSecArChanged();
    partial void OndateOuvChanging(System.Nullable<System.DateTime> value);
    partial void OndateOuvChanged();
    partial void OnnumSectionChanging(System.Nullable<int> value);
    partial void OnnumSectionChanged();
    partial void OnmodeGestionFormChanging(string value);
    partial void OnmodeGestionFormChanged();
    partial void OnnivQualificationChanging(string value);
    partial void OnnivQualificationChanged();
    partial void OndebutForChanging(System.Nullable<System.DateTime> value);
    partial void OndebutForChanged();
    partial void OnmodeOrgaFormChanging(string value);
    partial void OnmodeOrgaFormChanged();
    partial void OnfinForChanging(System.Nullable<System.DateTime> value);
    partial void OnfinForChanged();
    partial void OntuteurSectionChanging(string value);
    partial void OntuteurSectionChanged();
    partial void OnidCatChanging(System.Nullable<int> value);
    partial void OnidCatChanged();
    #endregion
		
		public Section()
		{
			this._CatalogeSection = default(EntityRef<CatalogeSection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSec", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idSec
		{
			get
			{
				return this._idSec;
			}
			set
			{
				if ((this._idSec != value))
				{
					this.OnidSecChanging(value);
					this.SendPropertyChanging();
					this._idSec = value;
					this.SendPropertyChanged("idSec");
					this.OnidSecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_libeleSec", DbType="VarChar(150)")]
		public string libeleSec
		{
			get
			{
				return this._libeleSec;
			}
			set
			{
				if ((this._libeleSec != value))
				{
					this.OnlibeleSecChanging(value);
					this.SendPropertyChanging();
					this._libeleSec = value;
					this.SendPropertyChanged("libeleSec");
					this.OnlibeleSecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_libeleSecAr", DbType="VarChar(150)")]
		public string libeleSecAr
		{
			get
			{
				return this._libeleSecAr;
			}
			set
			{
				if ((this._libeleSecAr != value))
				{
					this.OnlibeleSecArChanging(value);
					this.SendPropertyChanging();
					this._libeleSecAr = value;
					this.SendPropertyChanged("libeleSecAr");
					this.OnlibeleSecArChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateOuv", DbType="Date")]
		public System.Nullable<System.DateTime> dateOuv
		{
			get
			{
				return this._dateOuv;
			}
			set
			{
				if ((this._dateOuv != value))
				{
					this.OndateOuvChanging(value);
					this.SendPropertyChanging();
					this._dateOuv = value;
					this.SendPropertyChanged("dateOuv");
					this.OndateOuvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numSection", DbType="Int")]
		public System.Nullable<int> numSection
		{
			get
			{
				return this._numSection;
			}
			set
			{
				if ((this._numSection != value))
				{
					this.OnnumSectionChanging(value);
					this.SendPropertyChanging();
					this._numSection = value;
					this.SendPropertyChanged("numSection");
					this.OnnumSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modeGestionForm", DbType="VarChar(50)")]
		public string modeGestionForm
		{
			get
			{
				return this._modeGestionForm;
			}
			set
			{
				if ((this._modeGestionForm != value))
				{
					this.OnmodeGestionFormChanging(value);
					this.SendPropertyChanging();
					this._modeGestionForm = value;
					this.SendPropertyChanged("modeGestionForm");
					this.OnmodeGestionFormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nivQualification", DbType="VarChar(50)")]
		public string nivQualification
		{
			get
			{
				return this._nivQualification;
			}
			set
			{
				if ((this._nivQualification != value))
				{
					this.OnnivQualificationChanging(value);
					this.SendPropertyChanging();
					this._nivQualification = value;
					this.SendPropertyChanged("nivQualification");
					this.OnnivQualificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_debutFor", DbType="Date")]
		public System.Nullable<System.DateTime> debutFor
		{
			get
			{
				return this._debutFor;
			}
			set
			{
				if ((this._debutFor != value))
				{
					this.OndebutForChanging(value);
					this.SendPropertyChanging();
					this._debutFor = value;
					this.SendPropertyChanged("debutFor");
					this.OndebutForChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modeOrgaForm", DbType="VarChar(50)")]
		public string modeOrgaForm
		{
			get
			{
				return this._modeOrgaForm;
			}
			set
			{
				if ((this._modeOrgaForm != value))
				{
					this.OnmodeOrgaFormChanging(value);
					this.SendPropertyChanging();
					this._modeOrgaForm = value;
					this.SendPropertyChanged("modeOrgaForm");
					this.OnmodeOrgaFormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_finFor", DbType="Date")]
		public System.Nullable<System.DateTime> finFor
		{
			get
			{
				return this._finFor;
			}
			set
			{
				if ((this._finFor != value))
				{
					this.OnfinForChanging(value);
					this.SendPropertyChanging();
					this._finFor = value;
					this.SendPropertyChanged("finFor");
					this.OnfinForChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tuteurSection", DbType="VarChar(50)")]
		public string tuteurSection
		{
			get
			{
				return this._tuteurSection;
			}
			set
			{
				if ((this._tuteurSection != value))
				{
					this.OntuteurSectionChanging(value);
					this.SendPropertyChanging();
					this._tuteurSection = value;
					this.SendPropertyChanged("tuteurSection");
					this.OntuteurSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCat", DbType="Int")]
		public System.Nullable<int> idCat
		{
			get
			{
				return this._idCat;
			}
			set
			{
				if ((this._idCat != value))
				{
					if (this._CatalogeSection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCatChanging(value);
					this.SendPropertyChanging();
					this._idCat = value;
					this.SendPropertyChanged("idCat");
					this.OnidCatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatalogeSection_Section", Storage="_CatalogeSection", ThisKey="idCat", OtherKey="idCataloge", IsForeignKey=true)]
		public CatalogeSection CatalogeSection
		{
			get
			{
				return this._CatalogeSection.Entity;
			}
			set
			{
				CatalogeSection previousValue = this._CatalogeSection.Entity;
				if (((previousValue != value) 
							|| (this._CatalogeSection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatalogeSection.Entity = null;
						previousValue.Sections.Remove(this);
					}
					this._CatalogeSection.Entity = value;
					if ((value != null))
					{
						value.Sections.Add(this);
						this._idCat = value.idCataloge;
					}
					else
					{
						this._idCat = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatalogeSection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogeSection")]
	public partial class CatalogeSection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCataloge;
		
		private int _brancheId;
		
		private string _codeSpe;
		
		private string _intituleSpe;
		
		private string _fileresExigees;
		
		private int _niveauFormation;
		
		private EntitySet<Section> _Sections;
		
		private EntityRef<Branchee> _Branchee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCatalogeChanging(int value);
    partial void OnidCatalogeChanged();
    partial void OnbrancheIdChanging(int value);
    partial void OnbrancheIdChanged();
    partial void OncodeSpeChanging(string value);
    partial void OncodeSpeChanged();
    partial void OnintituleSpeChanging(string value);
    partial void OnintituleSpeChanged();
    partial void OnfileresExigeesChanging(string value);
    partial void OnfileresExigeesChanged();
    partial void OnniveauFormationChanging(int value);
    partial void OnniveauFormationChanged();
    #endregion
		
		public CatalogeSection()
		{
			this._Sections = new EntitySet<Section>(new Action<Section>(this.attach_Sections), new Action<Section>(this.detach_Sections));
			this._Branchee = default(EntityRef<Branchee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCataloge", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCataloge
		{
			get
			{
				return this._idCataloge;
			}
			set
			{
				if ((this._idCataloge != value))
				{
					this.OnidCatalogeChanging(value);
					this.SendPropertyChanging();
					this._idCataloge = value;
					this.SendPropertyChanged("idCataloge");
					this.OnidCatalogeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brancheId", DbType="Int NOT NULL")]
		public int brancheId
		{
			get
			{
				return this._brancheId;
			}
			set
			{
				if ((this._brancheId != value))
				{
					if (this._Branchee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbrancheIdChanging(value);
					this.SendPropertyChanging();
					this._brancheId = value;
					this.SendPropertyChanged("brancheId");
					this.OnbrancheIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codeSpe", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string codeSpe
		{
			get
			{
				return this._codeSpe;
			}
			set
			{
				if ((this._codeSpe != value))
				{
					this.OncodeSpeChanging(value);
					this.SendPropertyChanging();
					this._codeSpe = value;
					this.SendPropertyChanged("codeSpe");
					this.OncodeSpeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intituleSpe", DbType="VarChar(250)")]
		public string intituleSpe
		{
			get
			{
				return this._intituleSpe;
			}
			set
			{
				if ((this._intituleSpe != value))
				{
					this.OnintituleSpeChanging(value);
					this.SendPropertyChanging();
					this._intituleSpe = value;
					this.SendPropertyChanged("intituleSpe");
					this.OnintituleSpeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileresExigees", DbType="VarChar(50)")]
		public string fileresExigees
		{
			get
			{
				return this._fileresExigees;
			}
			set
			{
				if ((this._fileresExigees != value))
				{
					this.OnfileresExigeesChanging(value);
					this.SendPropertyChanging();
					this._fileresExigees = value;
					this.SendPropertyChanged("fileresExigees");
					this.OnfileresExigeesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_niveauFormation", DbType="Int NOT NULL")]
		public int niveauFormation
		{
			get
			{
				return this._niveauFormation;
			}
			set
			{
				if ((this._niveauFormation != value))
				{
					this.OnniveauFormationChanging(value);
					this.SendPropertyChanging();
					this._niveauFormation = value;
					this.SendPropertyChanged("niveauFormation");
					this.OnniveauFormationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatalogeSection_Section", Storage="_Sections", ThisKey="idCataloge", OtherKey="idCat")]
		public EntitySet<Section> Sections
		{
			get
			{
				return this._Sections;
			}
			set
			{
				this._Sections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branchee_CatalogeSection", Storage="_Branchee", ThisKey="brancheId", OtherKey="idBrache", IsForeignKey=true)]
		public Branchee Branchee
		{
			get
			{
				return this._Branchee.Entity;
			}
			set
			{
				Branchee previousValue = this._Branchee.Entity;
				if (((previousValue != value) 
							|| (this._Branchee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branchee.Entity = null;
						previousValue.CatalogeSections.Remove(this);
					}
					this._Branchee.Entity = value;
					if ((value != null))
					{
						value.CatalogeSections.Add(this);
						this._brancheId = value.idBrache;
					}
					else
					{
						this._brancheId = default(int);
					}
					this.SendPropertyChanged("Branchee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sections(Section entity)
		{
			this.SendPropertyChanging();
			entity.CatalogeSection = this;
		}
		
		private void detach_Sections(Section entity)
		{
			this.SendPropertyChanging();
			entity.CatalogeSection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branchees")]
	public partial class Branchee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idBrache;
		
		private string _libileBrache;
		
		private EntitySet<CatalogeSection> _CatalogeSections;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidBracheChanging(int value);
    partial void OnidBracheChanged();
    partial void OnlibileBracheChanging(string value);
    partial void OnlibileBracheChanged();
    #endregion
		
		public Branchee()
		{
			this._CatalogeSections = new EntitySet<CatalogeSection>(new Action<CatalogeSection>(this.attach_CatalogeSections), new Action<CatalogeSection>(this.detach_CatalogeSections));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBrache", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idBrache
		{
			get
			{
				return this._idBrache;
			}
			set
			{
				if ((this._idBrache != value))
				{
					this.OnidBracheChanging(value);
					this.SendPropertyChanging();
					this._idBrache = value;
					this.SendPropertyChanged("idBrache");
					this.OnidBracheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_libileBrache", DbType="VarChar(50)")]
		public string libileBrache
		{
			get
			{
				return this._libileBrache;
			}
			set
			{
				if ((this._libileBrache != value))
				{
					this.OnlibileBracheChanging(value);
					this.SendPropertyChanging();
					this._libileBrache = value;
					this.SendPropertyChanged("libileBrache");
					this.OnlibileBracheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branchee_CatalogeSection", Storage="_CatalogeSections", ThisKey="idBrache", OtherKey="brancheId")]
		public EntitySet<CatalogeSection> CatalogeSections
		{
			get
			{
				return this._CatalogeSections;
			}
			set
			{
				this._CatalogeSections.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CatalogeSections(CatalogeSection entity)
		{
			this.SendPropertyChanging();
			entity.Branchee = this;
		}
		
		private void detach_CatalogeSections(CatalogeSection entity)
		{
			this.SendPropertyChanging();
			entity.Branchee = null;
		}
	}
}
#pragma warning restore 1591
